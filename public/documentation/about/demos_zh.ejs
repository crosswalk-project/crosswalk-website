<h1>Crosswalk的性能</h1>

<h2>降低碎片化</h2>

<p>将Crosswalk的Webview与应用程序捆绑的直接好处便是，无论你的应用在哪里运行，它都使用一个相同的，基于Chromium的运行时环境。这样可以减少甚至消除由于旧版本的Webview所造成的难题。<small>(下方运行的Web应用使用的是Web Components和WebGL。)</small></p>

<div class="demo-block"> 
  <div class="demo-block-center">
    <div class="demo-cube-frag-phone">
      <img class="demo-img-phone" src="/assets/demo-web-innovation-fail.png" />
      <div class="demo-caption">没有使用Crosswalk的Web应用</div>
      <div class="demo-frag-text">在较老的设备上，默认的Android Webview可能不支持Cutton-edge特性。</div> 
    </div>
    
    <div class="demo-cube-frag-tablet"  >
      <img class="demo-img" src="/assets/demo-web-innovation.png" />
      <div class="demo-caption">Ambitious web app with Crosswalk</div>
      <div class="demo-frag-text">使用Crosswalk webview编译的web应用可以在任何android 4.0+的设备上使用最新的web技术。</div>
    </div>

    <br style="clear: left;" />  
  </div>
</div>

<!--        <iframe class="demo-img-webcl" src="https://www.youtube.com/embed/RviAF98lQOQ?vq=large&autoplay=0&controls=0&showinfo=0&rel=0&loop=0&playlist=RviAF98lQOQ" frameborder="0" allowfullscreen></iframe>  -->


<h2>WebCL: 图形加速</h2>

<p>通过Crosswalk编译你的web应用，便可以利用到最新的web应用特性和函数库。例如，<a href="http://webcl.nokiaresearch.com/">WebCL</a>可以使得web应用通过GPU来加速图形处理过程。<small>(下方的视频是一个基于ARM架构的Nexus 7.的截屏）</small></p>

<div class="demo-block">
  <div class="demo-block-center" id="demo-block-webcl" >

    <div class="demo-cube-webcl">
      <div id="webcl1-div">
        <img class="demo-img-webcl" id="webcl1" src="/assets/demo-webcl1.jpg" />
      </div>
      <div class="demo-caption">没有使用WebCL的web应用</div>
    </div>

    <div class="demo-cube-webcl" style="border:none;" >
      <div id="webcl2-div">
        <img class="demo-img-webcl" id="webcl2" src="/assets/demo-webcl2.jpg" />
      </div>
      <div class="demo-caption">使用了WebCL的web应用</div>
    </div>

    <br style="clear: left;" />  

    <a class="demo-play-btn demo-btn-webcl" id="webcl-play-btn"></a>

  </div>
</div>


<h2>SIMD: 并行化处理</h2>

<p>在基于x86的设备上，一个可用的高级功能是<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SIMD">SIMD</a>: 可以利用CPU并行化计算的能力。SIMD.js是一个为web应用实现了这个功能的javaScript库。</p>

<div class="demo-block">
  <div class="demo-block-center" id="demo-block-simd" >
    <div class="demo-cube-simd-text">
      <p>右方的"Flocking Birds" web应用不断地计算每只小鸟的位置和速度。它在维持~30FPS的同时尽量添加更多的小鸟。</p>
      <p>没有SIMD时大约可以产生17只小鸟，使用SIMD后大约有32只。</p>
      <p><small>(下方的视频是一个基于x86的ZenPhone5的截屏。)</small></p>
  
    </div>    

   <div style="float:left; width:65%; text-align: center;">
    <div class="demo-cube-simd">
      <div id="simd1-div">
        <img class="demo-img-simd" id="simd1" src="/assets/demo-simd1.jpg" />
      </div>
      <div class="demo-caption">没有使用SIMD的web应用</div>
    </div>

    <div class="demo-cube-simd" style="border:none;" >
      <div id="simd2-div">
        <img class="demo-img-simd" id="simd2" src="/assets/demo-simd2.jpg" />
      </div>
      <div class="demo-caption">使用了SIMD的web应用</div>
    </div>
    <br style="clear: left;" />  

    <a class="demo-play-btn demo-btn-simd" id="simd-play-btn"></a>
   </div>
  </div>
</div>

<script>
  onLoadDemoPage();
</script>


